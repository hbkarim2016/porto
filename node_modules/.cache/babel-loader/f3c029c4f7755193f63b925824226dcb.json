{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst ServicesSlice = createSlice({\n  name: 'services_slice',\n  initialState: {\n    position: '1st'\n  },\n  reducers: {\n    positionReducer: (state, action) => {\n      let circleName = action.payload.name;\n      state.position = circleName;\n    },\n    circleReducer: (state, action) => {\n      Object.keys(action.payload.childrenObj).map(el => action.payload.childrenObj[el].classList.remove('active'));\n      action.payload.target.classList.add('active');\n    }\n  }\n});\nexport const {\n  positionReducer,\n  circleReducer\n} = ServicesSlice.actions;\nexport default ServicesSlice.reducer;","map":{"version":3,"sources":["C:/My Computer/my work/apps/porto/src/content/redux/reducers/ServicesSlice.js"],"names":["createSlice","ServicesSlice","name","initialState","position","reducers","positionReducer","state","action","circleName","payload","circleReducer","Object","keys","childrenObj","map","el","classList","remove","target","add","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;AAC9BE,EAAAA,IAAI,EAAC,gBADyB;AAE9BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC;AADA,GAFiB;AAK9BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,eAAe,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAIC,UAAU,GAAGD,MAAM,CAACE,OAAP,CAAeR,IAAhC;AACAK,MAAAA,KAAK,CAACH,QAAN,GAAiBK,UAAjB;AACH,KAJI;AAKLE,IAAAA,aAAa,EAAC,CAACJ,KAAD,EAAOC,MAAP,KAAkB;AAC5BI,MAAAA,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACE,OAAP,CAAeI,WAA3B,EAAwCC,GAAxC,CAA4CC,EAAE,IAAER,MAAM,CAACE,OAAP,CAAeI,WAAf,CAA2BE,EAA3B,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,QAAhD,CAAhD;AACAV,MAAAA,MAAM,CAACE,OAAP,CAAeS,MAAf,CAAsBF,SAAtB,CAAgCG,GAAhC,CAAoC,QAApC;AACH;AARI;AALqB,CAAD,CAAjC;AAiBA,OAAO,MAAM;AAACd,EAAAA,eAAD;AAAkBK,EAAAA;AAAlB,IAAmCV,aAAa,CAACoB,OAAvD;AACP,eAAepB,aAAa,CAACqB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst ServicesSlice = createSlice({\r\n    name:'services_slice',\r\n    initialState:{\r\n        position:'1st'\r\n    },\r\n    reducers:{\r\n        positionReducer:(state,action) => {\r\n            let circleName = action.payload.name;\r\n            state.position = circleName;    \r\n        },\r\n        circleReducer:(state,action) => {\r\n            Object.keys(action.payload.childrenObj).map(el=>action.payload.childrenObj[el].classList.remove('active'));\r\n            action.payload.target.classList.add('active'); \r\n        }\r\n    }\r\n});\r\n\r\nexport const {positionReducer, circleReducer} = ServicesSlice.actions;\r\nexport default ServicesSlice.reducer;"]},"metadata":{},"sourceType":"module"}